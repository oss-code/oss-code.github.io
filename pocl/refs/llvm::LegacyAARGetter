<def f='include/llvm-6.0/llvm/Analysis/BasicAliasAnalysis.h' l='254' ll='266'/>
<size>1096</size>
<doc f='include/llvm-6.0/llvm/Analysis/BasicAliasAnalysis.h' l='251'>/// This class is a functor to be used in legacy module or SCC passes for
/// computing AA results for a function. We store the results in fields so that
/// they live long enough to be queried, but we re-use them each time.</doc>
<mbr r='llvm::LegacyAARGetter::P' o='0' t='llvm::Pass &amp;'/>
<mbr r='llvm::LegacyAARGetter::BAR' o='64' t='Optional&lt;llvm::BasicAAResult&gt;'/>
<mbr r='llvm::LegacyAARGetter::AAR' o='8256' t='Optional&lt;llvm::AAResults&gt;'/>
<fun r='_ZN4llvm15LegacyAARGetterC1ERNS_4PassE'/>
<fun r='_ZN4llvm15LegacyAARGetterclERNS_8FunctionE'/>
