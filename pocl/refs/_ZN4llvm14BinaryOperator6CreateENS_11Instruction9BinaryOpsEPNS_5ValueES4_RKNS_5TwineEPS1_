<dec f='include/llvm-6.0/llvm/IR/InstrTypes.h' l='352' type='static llvm::BinaryOperator * llvm::BinaryOperator::Create(llvm::Instruction::BinaryOps Op, llvm::Value * S1, llvm::Value * S2, const llvm::Twine &amp; Name = llvm::Twine(), llvm::Instruction * InsertBefore = nullptr)'/>
<use f='include/llvm-6.0/llvm/IR/Instruction.def' l='128' macro='1' u='c'/>
<use f='include/llvm-6.0/llvm/IR/Instruction.def' l='129' macro='1' u='c'/>
<use f='include/llvm-6.0/llvm/IR/Instruction.def' l='130' macro='1' u='c'/>
<use f='include/llvm-6.0/llvm/IR/Instruction.def' l='131' macro='1' u='c'/>
<use f='include/llvm-6.0/llvm/IR/Instruction.def' l='132' macro='1' u='c'/>
<use f='include/llvm-6.0/llvm/IR/Instruction.def' l='133' macro='1' u='c'/>
<use f='include/llvm-6.0/llvm/IR/Instruction.def' l='134' macro='1' u='c'/>
<use f='include/llvm-6.0/llvm/IR/Instruction.def' l='135' macro='1' u='c'/>
<use f='include/llvm-6.0/llvm/IR/Instruction.def' l='136' macro='1' u='c'/>
<use f='include/llvm-6.0/llvm/IR/Instruction.def' l='137' macro='1' u='c'/>
<use f='include/llvm-6.0/llvm/IR/Instruction.def' l='138' macro='1' u='c'/>
<use f='include/llvm-6.0/llvm/IR/Instruction.def' l='139' macro='1' u='c'/>
<use f='include/llvm-6.0/llvm/IR/Instruction.def' l='142' macro='1' u='c'/>
<use f='include/llvm-6.0/llvm/IR/Instruction.def' l='143' macro='1' u='c'/>
<use f='include/llvm-6.0/llvm/IR/Instruction.def' l='144' macro='1' u='c'/>
<use f='include/llvm-6.0/llvm/IR/Instruction.def' l='145' macro='1' u='c'/>
<use f='include/llvm-6.0/llvm/IR/Instruction.def' l='146' macro='1' u='c'/>
<use f='include/llvm-6.0/llvm/IR/Instruction.def' l='147' macro='1' u='c'/>
<use f='include/llvm-6.0/llvm/IR/Instruction.def' l='128' macro='1' u='c'/>
<use f='include/llvm-6.0/llvm/IR/Instruction.def' l='129' macro='1' u='c'/>
<use f='include/llvm-6.0/llvm/IR/Instruction.def' l='130' macro='1' u='c'/>
<use f='include/llvm-6.0/llvm/IR/Instruction.def' l='131' macro='1' u='c'/>
<use f='include/llvm-6.0/llvm/IR/Instruction.def' l='132' macro='1' u='c'/>
<use f='include/llvm-6.0/llvm/IR/Instruction.def' l='133' macro='1' u='c'/>
<use f='include/llvm-6.0/llvm/IR/Instruction.def' l='134' macro='1' u='c'/>
<use f='include/llvm-6.0/llvm/IR/Instruction.def' l='135' macro='1' u='c'/>
<use f='include/llvm-6.0/llvm/IR/Instruction.def' l='136' macro='1' u='c'/>
<use f='include/llvm-6.0/llvm/IR/Instruction.def' l='137' macro='1' u='c'/>
<use f='include/llvm-6.0/llvm/IR/Instruction.def' l='138' macro='1' u='c'/>
<use f='include/llvm-6.0/llvm/IR/Instruction.def' l='139' macro='1' u='c'/>
<use f='include/llvm-6.0/llvm/IR/Instruction.def' l='142' macro='1' u='c'/>
<use f='include/llvm-6.0/llvm/IR/Instruction.def' l='143' macro='1' u='c'/>
<use f='include/llvm-6.0/llvm/IR/Instruction.def' l='144' macro='1' u='c'/>
<use f='include/llvm-6.0/llvm/IR/Instruction.def' l='145' macro='1' u='c'/>
<use f='include/llvm-6.0/llvm/IR/Instruction.def' l='146' macro='1' u='c'/>
<use f='include/llvm-6.0/llvm/IR/Instruction.def' l='147' macro='1' u='c'/>
<use f='include/llvm-6.0/llvm/IR/InstrTypes.h' l='389' u='c' c='_ZN4llvm14BinaryOperator21CreateWithCopiedFlagsENS_11Instruction9BinaryOpsEPNS_5ValueES4_PS0_RKNS_5TwineE'/>
<use f='include/llvm-6.0/llvm/IR/InstrTypes.h' l='396' u='c' c='_ZN4llvm14BinaryOperator9CreateNSWENS_11Instruction9BinaryOpsEPNS_5ValueES4_RKNS_5TwineE'/>
<use f='include/llvm-6.0/llvm/IR/InstrTypes.h' l='408' u='c' c='_ZN4llvm14BinaryOperator9CreateNSWENS_11Instruction9BinaryOpsEPNS_5ValueES4_RKNS_5TwineEPS1_'/>
<use f='include/llvm-6.0/llvm/IR/InstrTypes.h' l='415' u='c' c='_ZN4llvm14BinaryOperator9CreateNUWENS_11Instruction9BinaryOpsEPNS_5ValueES4_RKNS_5TwineE'/>
<use f='include/llvm-6.0/llvm/IR/InstrTypes.h' l='427' u='c' c='_ZN4llvm14BinaryOperator9CreateNUWENS_11Instruction9BinaryOpsEPNS_5ValueES4_RKNS_5TwineEPS1_'/>
<use f='include/llvm-6.0/llvm/IR/InstrTypes.h' l='434' u='c' c='_ZN4llvm14BinaryOperator11CreateExactENS_11Instruction9BinaryOpsEPNS_5ValueES4_RKNS_5TwineE'/>
<use f='include/llvm-6.0/llvm/IR/InstrTypes.h' l='446' u='c' c='_ZN4llvm14BinaryOperator11CreateExactENS_11Instruction9BinaryOpsEPNS_5ValueES4_RKNS_5TwineEPS1_'/>
<use f='pocl/lib/CL/devices/cuda/pocl-ptx-gen.cc' l='259' u='c' c='_ZL9fixPrintFPN4llvm6ModuleE'/>
<doc f='include/llvm-6.0/llvm/IR/InstrTypes.h' l='347'>/// Construct a binary instruction, given the opcode and the two
  /// operands.  Optionally (if InstBefore is specified) insert the instruction
  /// into a BasicBlock right before the specified instruction.  The specified
  /// Instruction is allowed to be a dereferenced end iterator.
  ///</doc>
<use f='include/llvm-6.0/llvm/IR/IRBuilder.h' l='875' u='c' c='_ZN4llvm9IRBuilder23CreateInsertNUWNSWBinOpENS_11Instruction9BinaryOpsEPNS_5ValueES4_RKNS_5TwineEbb'/>
<use f='include/llvm-6.0/llvm/IR/IRBuilder.h' l='1118' u='c' c='_ZN4llvm9IRBuilder11CreateBinOpENS_11Instruction9BinaryOpsEPNS_5ValueES4_RKNS_5TwineEPNS_6MDNodeE'/>
<use f='pocl/lib/llvmopencl/BreakConstantGEPs.cpp' l='167' u='c' c='_ZL17convertExpressionPN4llvm12ConstantExprEPNS_11InstructionE'/>
