<inh f='include/llvm-6.0/llvm/ADT/iterator.h' l='68' c='llvm::iterator_facade_base'/>
<def f='include/llvm-6.0/llvm/Analysis/LazyCallGraph.h' l='886' ll='927'/>
<size>16</size>
<doc f='include/llvm-6.0/llvm/Analysis/LazyCallGraph.h' l='880'>/// A post-order depth-first RefSCC iterator over the call graph.
  ///
  /// This iterator walks the cached post-order sequence of RefSCCs. However,
  /// it trades stability for flexibility. It is restricted to a forward
  /// iterator but will survive mutations which insert new RefSCCs and continue
  /// to point to the same RefSCC even if it moves in the post-order sequence.</doc>
<mbr r='llvm::LazyCallGraph::postorder_ref_scc_iterator::G' o='0' t='llvm::LazyCallGraph *'/>
<mbr r='llvm::LazyCallGraph::postorder_ref_scc_iterator::RC' o='64' t='llvm::LazyCallGraph::RefSCC *'/>
<fun r='_ZN4llvm13LazyCallGraph26postorder_ref_scc_iteratorC1ERS0_'/>
<fun r='_ZN4llvm13LazyCallGraph26postorder_ref_scc_iteratorC1ERS0_NS1_8IsAtEndTE'/>
<fun r='_ZN4llvm13LazyCallGraph26postorder_ref_scc_iterator5getRCERS0_i'/>
<fun r='_ZNK4llvm13LazyCallGraph26postorder_ref_scc_iteratoreqERKS1_'/>
<fun r='_ZNK4llvm13LazyCallGraph26postorder_ref_scc_iteratordeEv'/>
<fun r='_ZN4llvm13LazyCallGraph26postorder_ref_scc_iteratorppEv'/>
