<dec f='include/llvm-6.0/llvm/Linker/Linker.h' l='47' type='bool llvm::Linker::linkInModule(std::unique_ptr&lt;Module&gt; Src, unsigned int Flags = Flags::None, std::function&lt;void (Module &amp;, const StringSet&lt;&gt; &amp;)&gt; InternalizeCallback = {})'/>
<use f='pocl/lib/CL/devices/cuda/pocl-ptx-gen.cc' l='554' u='c' c='_ZL13linkLibDevicePN4llvm6ModuleEPKcS3_'/>
<doc f='include/llvm-6.0/llvm/Linker/Linker.h' l='37'>/// \brief Link \p Src into the composite.
  ///
  /// Passing OverrideSymbols as true will have symbols from Src
  /// shadow those in the Dest.
  ///
  /// Passing InternalizeCallback will have the linker call the function with
  /// the new module and a list of global value names to be internalized by the
  /// callback.
  ///
  /// Returns true on error.</doc>
