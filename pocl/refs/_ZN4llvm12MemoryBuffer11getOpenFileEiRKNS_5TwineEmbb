<dec f='include/llvm-6.0/llvm/Support/MemoryBuffer.h' l='103' type='static ErrorOr&lt;std::unique_ptr&lt;MemoryBuffer&gt; &gt; llvm::MemoryBuffer::getOpenFile(int FD, const llvm::Twine &amp; Filename, uint64_t FileSize, bool RequiresNullTerminator = true, bool IsVolatile = false)'/>
<doc f='include/llvm-6.0/llvm/Support/MemoryBuffer.h' l='96'>/// Given an already-open file descriptor, read the file and return a
  /// MemoryBuffer.
  ///
  /// \param IsVolatile Set to true to indicate that the contents of the file
  /// can change outside the user&apos;s control, e.g. when libclang tries to parse
  /// while the user is editing/updating the file or if the file is on an NFS.</doc>
