<def f='include/llvm-6.0/llvm/ADT/Hashing.h' l='602' ll='606' type='llvm::hash_code llvm::hash_combine(const Ts &amp;... args)'/>
<doc f='include/llvm-6.0/llvm/ADT/Hashing.h' l='591'>/// \brief Combine values into a single hash_code.
///
/// This routine accepts a varying number of arguments of any type. It will
/// attempt to combine them into a single hash_code. For user-defined types it
/// attempts to call a \see hash_value overload (via ADL) for the type. For
/// integer and pointer types it directly combines their data into the
/// resulting hash_code.
///
/// The result is suitable for returning from a user&apos;s hash_value
/// *implementation* for their user-defined type. Consumers of a type should
/// *not* call this routine, they should instead call &apos;hash_value&apos;.</doc>
<use f='include/llvm-6.0/llvm/IR/Dominators.h' l='112' u='c' c='_ZN4llvm12DenseMapInfoINS_14BasicBlockEdgeEE12getHashValueERKS1_'/>
<use f='include/llvm-6.0/llvm/Analysis/ScalarEvolution.h' l='441' u='c' c='_ZN4llvm12DenseMapInfoINS_14ExitLimitQueryEE12getHashValueES1_'/>
<use f='include/llvm-6.0/llvm/Analysis/ScalarEvolution.h' l='441' u='c' c='_ZN4llvm12DenseMapInfoINS_14ExitLimitQueryEE12getHashValueES1_'/>
