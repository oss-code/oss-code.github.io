<dec f='include/llvm-6.0/llvm/Analysis/MemoryDependenceAnalysis.h' l='470' type='static unsigned int llvm::MemoryDependenceResults::getLoadLoadClobberFullWidthSize(const llvm::Value * MemLocBase, int64_t MemLocOffs, unsigned int MemLocSize, const llvm::LoadInst * LI)'/>
<doc f='include/llvm-6.0/llvm/Analysis/MemoryDependenceAnalysis.h' l='463'>/// Looks at a memory location for a load (specified by MemLocBase, Offs, and
  /// Size) and compares it against a load.
  ///
  /// If the specified load could be safely widened to a larger integer load
  /// that is 1) still efficient, 2) safe for the target, and 3) would provide
  /// the specified memory location value, then this function returns the size
  /// in bytes of the load width to use.  If not, this returns zero.</doc>
