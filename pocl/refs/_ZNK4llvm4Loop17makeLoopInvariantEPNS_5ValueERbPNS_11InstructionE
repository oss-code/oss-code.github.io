<dec f='include/llvm-6.0/llvm/Analysis/LoopInfo.h' l='475' type='bool llvm::Loop::makeLoopInvariant(llvm::Value * V, bool &amp; Changed, llvm::Instruction * InsertPt = nullptr) const'/>
<doc f='include/llvm-6.0/llvm/Analysis/LoopInfo.h' l='467'>/// If the given value is an instruction inside of the loop and it can be
  /// hoisted, do so to make it trivially loop-invariant.
  /// Return true if the value after any hoisting is loop invariant. This
  /// function can be used as a slightly more aggressive replacement for
  /// isLoopInvariant.
  ///
  /// If InsertPt is specified, it is the point to hoist instructions to.
  /// If null, the terminator of the loop preheader is used.</doc>
