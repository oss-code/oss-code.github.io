<def f='include/llvm-6.0/llvm/IR/InstrTypes.h' l='1215' ll='1239'/>
<doc f='include/llvm-6.0/llvm/IR/InstrTypes.h' l='1209'>/// \brief A container for an operand bundle being viewed as a set of values
/// rather than a set of uses.
///
/// Unlike OperandBundleUse, OperandBundleDefT owns the memory it carries, and
/// so it is possible to create and pass around &quot;self-contained&quot; instances of
/// OperandBundleDef and ConstOperandBundleDef.</doc>
<mbr r='llvm::OperandBundleDefT::Tag' t='std::string'/>
<mbr r='llvm::OperandBundleDefT::Inputs' t='std::vector&lt;InputTy&gt;'/>
<fun r='_ZN4llvm17OperandBundleDefTC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIT_SaIS8_EE'/>
<fun r='_ZN4llvm17OperandBundleDefTC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8ArrayRefIT_EE'/>
<fun r='_ZN4llvm17OperandBundleDefTC1ERKNS_16OperandBundleUseE'/>
<fun r='_ZNK4llvm17OperandBundleDefT6inputsEv'/>
<fun r='_ZNK4llvm17OperandBundleDefT10input_sizeEv'/>
<fun r='_ZNK4llvm17OperandBundleDefT11input_beginEv'/>
<fun r='_ZNK4llvm17OperandBundleDefT9input_endEv'/>
<fun r='_ZNK4llvm17OperandBundleDefT6getTagEv'/>
