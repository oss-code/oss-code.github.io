<use f='include/llvm-6.0/llvm/IR/CallSite.h' l='183' u='c' c='_ZNK4llvm12CallSiteBase13isDataOperandEPKNS_3UseE'/>
<use f='include/llvm-6.0/llvm/IR/CallSite.h' l='232' u='c' c='_ZNK4llvm12CallSiteBase16getDataOperandNoEPKNS_3UseE'/>
<def f='include/llvm-6.0/llvm/IR/CallSite.h' l='245' ll='248' type='IterTy llvm::CallSiteBase::data_operands_begin() const'/>
<use f='include/llvm-6.0/llvm/IR/CallSite.h' l='254' u='c' c='_ZNK4llvm12CallSiteBase8data_opsEv'/>
<use f='include/llvm-6.0/llvm/IR/CallSite.h' l='257' u='c' c='_ZNK4llvm12CallSiteBase19data_operands_emptyEv'/>
<use f='include/llvm-6.0/llvm/IR/CallSite.h' l='260' u='c' c='_ZNK4llvm12CallSiteBase18data_operands_sizeEv'/>
<doc f='include/llvm-6.0/llvm/IR/CallSite.h' l='239'>/// data_operands_begin/data_operands_end - Return iterators iterating over
  /// the call / invoke argument list and bundle operands.  For invokes, this is
  /// the set of instruction operands except the invoke target and the two
  /// successor blocks; and for calls this is the set of instruction operands
  /// except the call target.</doc>
