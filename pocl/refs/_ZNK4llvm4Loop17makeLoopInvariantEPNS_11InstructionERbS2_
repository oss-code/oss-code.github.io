<dec f='include/llvm-6.0/llvm/Analysis/LoopInfo.h' l='487' type='bool llvm::Loop::makeLoopInvariant(llvm::Instruction * I, bool &amp; Changed, llvm::Instruction * InsertPt = nullptr) const'/>
<doc f='include/llvm-6.0/llvm/Analysis/LoopInfo.h' l='478'>/// If the given instruction is inside of the loop and it can be hoisted, do
  /// so to make it trivially loop-invariant.
  /// Return true if the instruction after any hoisting is loop invariant. This
  /// function can be used as a slightly more aggressive replacement for
  /// isLoopInvariant.
  ///
  /// If InsertPt is specified, it is the point to hoist instructions to.
  /// If null, the terminator of the loop preheader is used.
  ///</doc>
