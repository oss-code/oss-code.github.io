<inh f='include/llvm-6.0/llvm/IR/InstrTypes.h' l='843' c='llvm::CmpInst'/>
<def f='include/llvm-6.0/llvm/IR/Instructions.h' l='1108' ll='1240'/>
<size>56</size>
<doc f='include/llvm-6.0/llvm/IR/Instructions.h' l='1100'>//===----------------------------------------------------------------------===//
//                               ICmpInst Class
//===----------------------------------------------------------------------===//

/// This instruction compares its operands according to the predicate given
/// to the constructor. It only operates on integers or pointers. The operands
/// must be identical types.
/// Represent an integer comparison operator.</doc>
<fun r='_ZN4llvm8ICmpInst8AssertOKEv'/>
<fun r='_ZNK4llvm8ICmpInst9cloneImplEv'/>
<fun r='_ZN4llvm8ICmpInstC1EPNS_11InstructionENS_7CmpInst9PredicateEPNS_5ValueES6_RKNS_5TwineE'/>
<fun r='_ZN4llvm8ICmpInstC1ERNS_10BasicBlockENS_7CmpInst9PredicateEPNS_5ValueES6_RKNS_5TwineE'/>
<fun r='_ZN4llvm8ICmpInstC1ENS_7CmpInst9PredicateEPNS_5ValueES4_RKNS_5TwineE'/>
<fun r='_ZNK4llvm8ICmpInst18getSignedPredicateEv'/>
<fun r='_ZN4llvm8ICmpInst18getSignedPredicateENS_7CmpInst9PredicateE'/>
<fun r='_ZNK4llvm8ICmpInst20getUnsignedPredicateEv'/>
<fun r='_ZN4llvm8ICmpInst20getUnsignedPredicateENS_7CmpInst9PredicateE'/>
<fun r='_ZN4llvm8ICmpInst10isEqualityENS_7CmpInst9PredicateE'/>
<fun r='_ZNK4llvm8ICmpInst10isEqualityEv'/>
<fun r='_ZNK4llvm8ICmpInst13isCommutativeEv'/>
<fun r='_ZNK4llvm8ICmpInst12isRelationalEv'/>
<fun r='_ZN4llvm8ICmpInst12isRelationalENS_7CmpInst9PredicateE'/>
<fun r='_ZN4llvm8ICmpInst12swapOperandsEv'/>
<fun r='_ZN4llvm8ICmpInst7classofEPKNS_11InstructionE'/>
<fun r='_ZN4llvm8ICmpInst7classofEPKNS_5ValueE'/>
