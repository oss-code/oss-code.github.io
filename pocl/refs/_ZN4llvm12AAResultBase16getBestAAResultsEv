<def f='include/llvm-6.0/llvm/Analysis/AliasAnalysis.h' l='934' type='llvm::AAResultBase::AAResultsProxy llvm::AAResultBase::getBestAAResults()'/>
<doc f='include/llvm-6.0/llvm/Analysis/AliasAnalysis.h' l='924'>/// Get a proxy for the best AA result set to query at this time.
  ///
  /// When this result is part of a larger aggregation, this will proxy to that
  /// aggregation. When this result is used in isolation, it will just delegate
  /// back to the derived class&apos;s implementation.
  ///
  /// Note that callers of this need to take considerable care to not cause
  /// performance problems when they use this routine, in the case of a large
  /// number of alias analyses being aggregated, it can be expensive to walk
  /// back across the chain.</doc>
