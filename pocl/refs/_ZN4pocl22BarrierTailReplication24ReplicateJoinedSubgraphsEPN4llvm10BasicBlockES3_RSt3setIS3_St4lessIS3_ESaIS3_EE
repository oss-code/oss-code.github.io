<dec f='pocl/lib/llvmopencl/BarrierTailReplication.h' l='64' type='bool pocl::BarrierTailReplication::ReplicateJoinedSubgraphs(llvm::BasicBlock * dominator, llvm::BasicBlock * subgraph_entry, BasicBlockSet &amp; processed_bbs)'/>
<use f='pocl/lib/llvmopencl/BarrierTailReplication.cc' l='140' u='c' c='_ZN4pocl22BarrierTailReplication15FindBarriersDFSEPN4llvm10BasicBlockERSt3setIS3_St4lessIS3_ESaIS3_EE'/>
<def f='pocl/lib/llvmopencl/BarrierTailReplication.cc' l='156' ll='224' type='bool pocl::BarrierTailReplication::ReplicateJoinedSubgraphs(llvm::BasicBlock * dominator, llvm::BasicBlock * subgraph_entry, BasicBlockSet &amp; processed_bbs)'/>
<use f='pocl/lib/llvmopencl/BarrierTailReplication.cc' l='199' u='c' c='_ZN4pocl22BarrierTailReplication24ReplicateJoinedSubgraphsEPN4llvm10BasicBlockES3_RSt3setIS3_St4lessIS3_ESaIS3_EE'/>
<doc f='pocl/lib/llvmopencl/BarrierTailReplication.cc' l='153'>// Only replicate those parts of the subgraph that are not
// dominated by a (barrier) basic block, to avoid excesive
// (and confusing) code replication.</doc>
