<dec f='include/llvm-6.0/llvm/Analysis/LazyCallGraph.h' l='634' type='bool llvm::LazyCallGraph::RefSCC::isParentOf(const llvm::LazyCallGraph::RefSCC &amp; RC) const'/>
<use f='include/llvm-6.0/llvm/Analysis/LazyCallGraph.h' l='647' u='c' c='_ZNK4llvm13LazyCallGraph6RefSCC9isChildOfERKS1_'/>
<doc f='include/llvm-6.0/llvm/Analysis/LazyCallGraph.h' l='630'>/// Test if this RefSCC is a parent of \a RC.
    ///
    /// CAUTION: This method walks every edge in the \c RefSCC, it can be very
    /// expensive.</doc>
