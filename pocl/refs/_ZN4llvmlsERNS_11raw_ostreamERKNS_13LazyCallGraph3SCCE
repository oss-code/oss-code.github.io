<def f='include/llvm-6.0/llvm/Analysis/LazyCallGraph.h' l='454' ll='470' type='llvm::raw_ostream &amp; llvm::operator&lt;&lt;(llvm::raw_ostream &amp; OS, const llvm::LazyCallGraph::SCC &amp; C)'/>
<use f='include/llvm-6.0/llvm/Analysis/LazyCallGraph.h' l='528' u='c' c='_ZNK4llvm13LazyCallGraph3SCC7getNameB5cxx11Ev'/>
<use f='include/llvm-6.0/llvm/Analysis/LazyCallGraph.h' l='583' u='c' c='_ZN4llvmlsERNS_11raw_ostreamERKNS_13LazyCallGraph6RefSCCE'/>
<use f='include/llvm-6.0/llvm/Analysis/LazyCallGraph.h' l='586' u='c' c='_ZN4llvmlsERNS_11raw_ostreamERKNS_13LazyCallGraph6RefSCCE'/>
<doc f='include/llvm-6.0/llvm/Analysis/LazyCallGraph.h' l='447'>/// Print a short descrtiption useful for debugging or logging.
    ///
    /// We print the function names in the SCC wrapped in &apos;()&apos;s and skipping
    /// the middle functions if there are a large number.
    //
    // Note: this is defined inline to dodge issues with GCC&apos;s interpretation
    // of enclosing namespaces for friend function declarations.</doc>
