<use f='include/llvm-6.0/llvm/IR/Instruction.h' l='162' u='r' c='_ZN4llvm11Instruction16isBitwiseLogicOpEj'/>
<use f='include/llvm-6.0/llvm/IR/Instruction.h' l='441' u='r' c='_ZN4llvm11Instruction13isAssociativeEj'/>
<use f='include/llvm-6.0/llvm/IR/Instruction.h' l='457' c='_ZN4llvm11Instruction13isCommutativeEj'/>
<use f='include/llvm-6.0/llvm/IR/Instruction.h' l='472' u='r' c='_ZN4llvm11Instruction12isIdempotentEj'/>
<dec f='include/llvm-6.0/llvm/IR/Instruction.def' l='145' type='26'/>
<use f='include/llvm-6.0/llvm/IR/Instruction.def' l='145' u='r' c='_ZN4llvm14BinaryOperator9CreateAndEPNS_5ValueES2_RKNS_5TwineE'/>
<use f='include/llvm-6.0/llvm/IR/Instruction.def' l='145' u='r' c='_ZN4llvm14BinaryOperator9CreateAndEPNS_5ValueES2_RKNS_5TwineEPNS_10BasicBlockE'/>
<use f='include/llvm-6.0/llvm/IR/Instruction.def' l='145' u='r' c='_ZN4llvm14BinaryOperator9CreateAndEPNS_5ValueES2_RKNS_5TwineEPNS_11InstructionE'/>
<use f='pocl/lib/llvmopencl/BreakConstantGEPs.cpp' l='163' c='_ZL17convertExpressionPN4llvm12ConstantExprEPNS_11InstructionE'/>
