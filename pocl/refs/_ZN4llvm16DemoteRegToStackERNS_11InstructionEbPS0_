<dec f='include/llvm-6.0/llvm/Transforms/Utils/Local.h' l='217' type='llvm::AllocaInst * llvm::DemoteRegToStack(llvm::Instruction &amp; X, bool VolatileLoads = false, llvm::Instruction * AllocaPoint = nullptr)'/>
<doc f='include/llvm-6.0/llvm/Transforms/Utils/Local.h' l='212'>/// This function takes a virtual register computed by an Instruction and
/// replaces it with a slot in the stack frame, allocated via alloca.
/// This allows the CFG to be changed around without fear of invalidating the
/// SSA information for the value. It returns the pointer to the alloca inserted
/// to create a stack slot for X.</doc>
