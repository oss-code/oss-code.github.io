<dec f='include/llvm-6.0/llvm/IR/Instructions.h' l='2446' type='void llvm::InsertValueInst::InsertValueInst(llvm::Value * Agg, llvm::Value * Val, ArrayRef&lt;unsigned int&gt; Idxs, const llvm::Twine &amp; NameStr, llvm::Instruction * InsertBefore)'/>
<use f='include/llvm-6.0/llvm/IR/Instructions.h' l='2481' u='c' c='_ZN4llvm15InsertValueInst6CreateEPNS_5ValueES2_NS_8ArrayRefIjEERKNS_5TwineEPNS_11InstructionE'/>
<def f='include/llvm-6.0/llvm/IR/Instructions.h' l='2548' ll='2557' type='void llvm::InsertValueInst::InsertValueInst(llvm::Value * Agg, llvm::Value * Val, ArrayRef&lt;unsigned int&gt; Idxs, const llvm::Twine &amp; NameStr, llvm::Instruction * InsertBefore)'/>
<doc f='include/llvm-6.0/llvm/IR/Instructions.h' l='2442'>/// Constructors - Create a insertvalue instruction with a base aggregate
  /// value, a value to insert, and a list of indices.  The first ctor can
  /// optionally insert before an existing instruction, the second appends
  /// the new instruction to the specified BasicBlock.</doc>
