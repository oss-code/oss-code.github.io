<def f='include/llvm-6.0/llvm/Support/MathExtras.h' l='632' ll='640' type='uint64_t llvm::NextPowerOf2(uint64_t A)'/>
<use f='include/llvm-6.0/llvm/Support/MathExtras.h' l='654' u='c' c='_ZN4llvm12PowerOf2CeilEm'/>
<use f='include/llvm-6.0/llvm/ADT/SmallVector.h' l='238' u='c' c='_ZN4llvm23SmallVectorTemplateBase4growEm'/>
<use f='include/llvm-6.0/llvm/Support/Allocator.h' l='453' u='c' c='_ZnwmRN4llvm20BumpPtrAllocatorImplIT_XT0_EXT1_EEE'/>
<use f='include/llvm-6.0/llvm/ADT/DenseMap.h' l='358' u='c' c='_ZN4llvm12DenseMapBase31getMinBucketToReserveForEntriesEj'/>
<use f='include/llvm-6.0/llvm/ADT/DenseMap.h' l='732' u='c' c='_ZN4llvm8DenseMap4growEj'/>
<use f='include/llvm-6.0/llvm/ADT/DenseMap.h' l='962' u='c' c='_ZN4llvm13SmallDenseMap4growEj'/>
<doc f='include/llvm-6.0/llvm/Support/MathExtras.h' l='630'>/// Returns the next power of two (in 64-bits) that is strictly greater than A.
/// Returns zero on overflow.</doc>
