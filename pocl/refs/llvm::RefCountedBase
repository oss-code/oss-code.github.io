<def f='include/llvm-6.0/llvm/ADT/IntrusiveRefCntPtr.h' l='71' ll='85'/>
<doc f='include/llvm-6.0/llvm/ADT/IntrusiveRefCntPtr.h' l='65'>/// A CRTP mixin class that adds reference counting to a type.
///
/// The lifetime of an object which inherits from RefCountedBase is managed by
/// calls to Release() and Retain(), which increment and decrement the object&apos;s
/// refcount, respectively.  When a Release() call decrements the refcount to 0,
/// the object deletes itself.</doc>
<mbr r='llvm::RefCountedBase::RefCount' t='unsigned int'/>
<fun r='_ZN4llvm14RefCountedBaseC1Ev'/>
<fun r='_ZN4llvm14RefCountedBaseC1ERKNS_14RefCountedBaseIT_EE'/>
<fun r='_ZNK4llvm14RefCountedBase6RetainEv'/>
<fun r='_ZNK4llvm14RefCountedBase7ReleaseEv'/>
