<dec f='include/llvm-6.0/llvm/Analysis/CallGraph.h' l='96' type='void llvm::CallGraph::spliceFunction(const llvm::Function * From, const llvm::Function * To)'/>
<doc f='include/llvm-6.0/llvm/Analysis/CallGraph.h' l='91'>/// \brief Replace the function represented by this node by another.
  ///
  /// This does not rescan the body of the function, so it is suitable when
  /// splicing the body of one function to another while also updating all
  /// callers from the old function to the new.</doc>
