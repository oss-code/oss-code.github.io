<def f='include/llvm-6.0/llvm/IR/IRBuilder.h' l='1937' ll='1958' type='llvm::CallInst * llvm::IRBuilder::CreateAlignmentAssumption(const llvm::DataLayout &amp; DL, llvm::Value * PtrValue, llvm::Value * Alignment, llvm::Value * OffsetValue = nullptr)'/>
<doc f='include/llvm-6.0/llvm/IR/IRBuilder.h' l='1927'>//
  /// \brief Create an assume intrinsic call that represents an alignment
  /// assumption on the provided pointer.
  ///
  /// An optional offset can be provided, and if it is provided, the offset
  /// must be subtracted from the provided pointer to get the pointer with the
  /// specified alignment.
  ///
  /// This overload handles the condition where the Alignment is dependent
  /// on an existing value rather than a static value.</doc>
