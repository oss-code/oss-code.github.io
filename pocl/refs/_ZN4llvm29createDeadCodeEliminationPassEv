<dec f='include/llvm-6.0/llvm/Transforms/Scalar.h' l='67' type='llvm::FunctionPass * llvm::createDeadCodeEliminationPass()'/>
<use f='include/llvm-6.0/llvm/LinkAllPasses.h' l='88' u='c' c='_ZN12_GLOBAL__N_116ForcePassLinkingC1Ev'/>
<doc f='include/llvm-6.0/llvm/Transforms/Scalar.h' l='60'>//===----------------------------------------------------------------------===//
//
// DeadCodeElimination - This pass is more powerful than DeadInstElimination,
// because it is worklist driven that can potentially revisit instructions when
// their other instructions become dead, to eliminate chains of dead
// computations.
//</doc>
