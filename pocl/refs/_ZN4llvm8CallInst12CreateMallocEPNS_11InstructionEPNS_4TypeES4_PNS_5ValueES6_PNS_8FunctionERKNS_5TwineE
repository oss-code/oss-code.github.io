<dec f='include/llvm-6.0/llvm/IR/Instructions.h' l='1489' type='static llvm::Instruction * llvm::CallInst::CreateMalloc(llvm::Instruction * InsertBefore, llvm::Type * IntPtrTy, llvm::Type * AllocTy, llvm::Value * AllocSize, llvm::Value * ArraySize = nullptr, llvm::Function * MallocF = nullptr, const llvm::Twine &amp; Name = &quot;&quot;)'/>
<doc f='include/llvm-6.0/llvm/IR/Instructions.h' l='1483'>/// Generate the IR for a call to malloc:
  /// 1. Compute the malloc call&apos;s argument as the specified type&apos;s size,
  ///    possibly multiplied by the array size if the array size is not
  ///    constant 1.
  /// 2. Call malloc with that argument.
  /// 3. Bitcast the result of the malloc call to the specified type.</doc>
