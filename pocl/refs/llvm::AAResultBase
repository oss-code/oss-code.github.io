<def f='include/llvm-6.0/llvm/Analysis/AliasAnalysis.h' l='857' ll='964'/>
<doc f='include/llvm-6.0/llvm/Analysis/AliasAnalysis.h' l='844'>/// A CRTP-driven &quot;mixin&quot; base class to help implement the function alias
/// analysis results concept.
///
/// Because of the nature of many alias analysis implementations, they often
/// only implement a subset of the interface. This base class will attempt to
/// implement the remaining portions of the interface in terms of simpler forms
/// of the interface where possible, and otherwise provide conservatively
/// correct fallback implementations.
///
/// Implementors of an alias analysis should derive from this CRTP, and then
/// override specific methods that they wish to customize. There is no need to
/// use virtual anywhere, the CRTP base class does static dispatch to the
/// derived type passed into it.</doc>
<mbr r='llvm::AAResultBase::AAR' t='llvm::AAResults *'/>
<fun r='_ZN4llvm12AAResultBase7derivedEv'/>
<fun r='_ZN4llvm12AAResultBase12setAAResultsEPNS_9AAResultsE'/>
<fun r='_ZN4llvm12AAResultBaseC1Ev'/>
<fun r='_ZN4llvm12AAResultBaseC1ERKNS_12AAResultBaseIT_EE'/>
<fun r='_ZN4llvm12AAResultBaseC1EONS_12AAResultBaseIT_EE'/>
<fun r='_ZN4llvm12AAResultBase16getBestAAResultsEv'/>
<fun r='_ZN4llvm12AAResultBase5aliasERKNS_14MemoryLocationES3_'/>
<fun r='_ZN4llvm12AAResultBase22pointsToConstantMemoryERKNS_14MemoryLocationEb'/>
<fun r='_ZN4llvm12AAResultBase16getArgModRefInfoENS_17ImmutableCallSiteEj'/>
<fun r='_ZN4llvm12AAResultBase17getModRefBehaviorENS_17ImmutableCallSiteE'/>
<fun r='_ZN4llvm12AAResultBase17getModRefBehaviorEPKNS_8FunctionE'/>
<fun r='_ZN4llvm12AAResultBase13getModRefInfoENS_17ImmutableCallSiteERKNS_14MemoryLocationE'/>
<fun r='_ZN4llvm12AAResultBase13getModRefInfoENS_17ImmutableCallSiteES1_'/>
<ovr f='include/llvm-6.0/llvm/Analysis/BasicAliasAnalysis.h' l='54' c='llvm::BasicAAResult'/>
<ovr f='include/llvm-6.0/llvm/Analysis/CFLAndersAliasAnalysis.h' l='39' c='llvm::CFLAndersAAResult'/>
<ovr f='include/llvm-6.0/llvm/Analysis/CFLSteensAliasAnalysis.h' l='40' c='llvm::CFLSteensAAResult'/>
<ovr f='include/llvm-6.0/llvm/Analysis/GlobalsModRef.h' l='32' c='llvm::GlobalsAAResult'/>
<ovr f='include/llvm-6.0/llvm/Analysis/ScalarEvolutionAliasAnalysis.h' l='27' c='llvm::SCEVAAResult'/>
<ovr f='include/llvm-6.0/llvm/Analysis/ScopedNoAliasAA.h' l='31' c='llvm::ScopedNoAliasAAResult'/>
<ovr f='include/llvm-6.0/llvm/Analysis/TypeBasedAliasAnalysis.h' l='32' c='llvm::TypeBasedAAResult'/>
<ovr f='pocl/lib/llvmopencl/WorkItemAliasAnalysis.cc' l='61' c='WorkItemAAResult'/>
