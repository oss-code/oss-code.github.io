<def f='include/llvm-6.0/llvm/IR/PassManager.h' l='559' ll='635'/>
<doc f='include/llvm-6.0/llvm/IR/PassManager.h' l='550'>/// API to communicate dependencies between analyses during invalidation.
  ///
  /// When an analysis result embeds handles to other analysis results, it
  /// needs to be invalidated both when its own information isn&apos;t preserved and
  /// when any of its embedded analysis results end up invalidated. We pass an
  /// \c Invalidator object as an argument to \c invalidate() in order to let
  /// the analysis results themselves define the dependency graph on the fly.
  /// This lets us avoid building building an explicit representation of the
  /// dependencies between analysis results.</doc>
<fun r='_ZN4llvm15AnalysisManager11Invalidator10invalidateERT_RKNS_17PreservedAnalysesE'/>
<fun r='_ZN4llvm15AnalysisManager11Invalidator10invalidateEPNS_11AnalysisKeyERT_RKNS_17PreservedAnalysesE'/>
<fun r='_ZN4llvm15AnalysisManager11Invalidator14invalidateImplEPNS_11AnalysisKeyERT_RKNS_17PreservedAnalysesE'/>
<fun r='_ZN4llvm15AnalysisManager11InvalidatorC1ERNS_13SmallDenseMapIPNS_11AnalysisKeyEbLj8ENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_bEEEERKNS_8Dens5440240'/>
<mbr r='llvm::AnalysisManager::Invalidator::IsResultInvalidated' t='SmallDenseMap&lt;llvm::AnalysisKey *, bool, 8&gt; &amp;'/>
<mbr r='llvm::AnalysisManager::Invalidator::Results' t='const AnalysisResultMapT &amp;'/>
