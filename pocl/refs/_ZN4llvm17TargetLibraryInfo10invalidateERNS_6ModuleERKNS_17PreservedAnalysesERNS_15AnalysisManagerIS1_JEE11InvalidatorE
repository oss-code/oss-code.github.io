<def f='include/llvm-6.0/llvm/Analysis/TargetLibraryInfo.h' l='331' ll='334' type='bool llvm::TargetLibraryInfo::invalidate(llvm::Module &amp; , const llvm::PreservedAnalyses &amp; , ModuleAnalysisManager::Invalidator &amp; )'/>
<doc f='include/llvm-6.0/llvm/Analysis/TargetLibraryInfo.h' l='327'>/// Handle invalidation from the pass manager.
  ///
  /// If we try to invalidate this info, just return false. It cannot become
  /// invalid even if the module or function changes.</doc>
