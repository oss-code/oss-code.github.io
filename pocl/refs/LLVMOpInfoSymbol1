<def f='include/llvm-c-6.0/llvm-c/Disassembler.h' l='78' ll='82'/>
<size>24</size>
<doc f='include/llvm-c-6.0/llvm-c/Disassembler.h' l='58'>/**
 * The initial support in LLVM MC for the most general form of a relocatable
 * expression is &quot;AddSymbol - SubtractSymbol + Offset&quot;.  For some Darwin targets
 * this full form is encoded in the relocation information so that AddSymbol and
 * SubtractSymbol can be link edited independent of each other.  Many other
 * platforms only allow a relocatable expression of the form AddSymbol + Offset
 * to be encoded.
 *
 * The LLVMOpInfoCallback() for the TagType value of 1 uses the struct
 * LLVMOpInfo1.  The value of the relocatable expression for the operand,
 * including any PC adjustment, is passed in to the call back in the Value
 * field.  The symbolic information about the operand is returned using all
 * the fields of the structure with the Offset of the relocatable expression
 * returned in the Value field.  It is possible that some symbols in the
 * relocatable expression were assembly temporary symbols, for example
 * &quot;Ldata - LpicBase + constant&quot;, and only the Values of the symbols without
 * symbol names are present in the relocation information.  The VariantKind
 * type is one of the Target specific #defines below and is used to print
 * operands like &quot;_foo@GOT&quot;, &quot;:lower16:_foo&quot;, etc.
 */</doc>
<mbr r='LLVMOpInfoSymbol1::Present' o='0' t='uint64_t'/>
<mbr r='LLVMOpInfoSymbol1::Name' o='64' t='const char *'/>
<mbr r='LLVMOpInfoSymbol1::Value' o='128' t='uint64_t'/>
