<dec f='include/llvm-6.0/llvm/IR/InstrTypes.h' l='801' type='static unsigned int llvm::CastInst::isEliminableCastPair(Instruction::CastOps firstOpcode, Instruction::CastOps secondOpcode, llvm::Type * SrcTy, llvm::Type * MidTy, llvm::Type * DstTy, llvm::Type * SrcIntPtrTy, llvm::Type * MidIntPtrTy, llvm::Type * DstIntPtrTy)'/>
<doc f='include/llvm-6.0/llvm/IR/InstrTypes.h' l='795'>/// Determine how a pair of casts can be eliminated, if they can be at all.
  /// This is a helper function for both CastInst and ConstantExpr.
  /// @returns 0 if the CastInst pair can&apos;t be eliminated, otherwise
  /// returns Instruction::CastOps value for a cast that can replace
  /// the pair, casting SrcTy to DstTy.
  /// @brief Determine if a cast pair is eliminable</doc>
