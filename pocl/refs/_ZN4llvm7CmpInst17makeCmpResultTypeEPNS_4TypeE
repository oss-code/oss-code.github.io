<def f='include/llvm-6.0/llvm/IR/InstrTypes.h' l='1067' ll='1073' type='static llvm::Type * llvm::CmpInst::makeCmpResultType(llvm::Type * opnd_type)'/>
<use f='include/llvm-6.0/llvm/IR/Instructions.h' l='1135' u='c' c='_ZN4llvm8ICmpInstC1EPNS_11InstructionENS_7CmpInst9PredicateEPNS_5ValueES6_RKNS_5TwineE'/>
<use f='include/llvm-6.0/llvm/IR/Instructions.h' l='1150' u='c' c='_ZN4llvm8ICmpInstC1ERNS_10BasicBlockENS_7CmpInst9PredicateEPNS_5ValueES6_RKNS_5TwineE'/>
<use f='include/llvm-6.0/llvm/IR/Instructions.h' l='1164' u='c' c='_ZN4llvm8ICmpInstC1ENS_7CmpInst9PredicateEPNS_5ValueES4_RKNS_5TwineE'/>
<use f='include/llvm-6.0/llvm/IR/Instructions.h' l='1275' u='c' c='_ZN4llvm8FCmpInstC1EPNS_11InstructionENS_7CmpInst9PredicateEPNS_5ValueES6_RKNS_5TwineE'/>
<use f='include/llvm-6.0/llvm/IR/Instructions.h' l='1288' u='c' c='_ZN4llvm8FCmpInstC1ERNS_10BasicBlockENS_7CmpInst9PredicateEPNS_5ValueES6_RKNS_5TwineE'/>
<use f='include/llvm-6.0/llvm/IR/Instructions.h' l='1300' u='c' c='_ZN4llvm8FCmpInstC1ENS_7CmpInst9PredicateEPNS_5ValueES4_RKNS_5TwineE'/>
<doc f='include/llvm-6.0/llvm/IR/InstrTypes.h' l='1066'>/// @brief Create a result type for fcmp/icmp</doc>
