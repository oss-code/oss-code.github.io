<def f='include/llvm-6.0/llvm/IR/DiagnosticInfo.h' l='843' ll='847' type='void llvm::OptimizationRemarkAnalysisFPCommute::OptimizationRemarkAnalysisFPCommute(const char * PassName, const llvm::Function &amp; Fn, const llvm::DiagnosticLocation &amp; Loc, const llvm::Twine &amp; Msg)'/>
<doc f='include/llvm-6.0/llvm/IR/DiagnosticInfo.h' l='832'>/// This is deprecated now and only used by the function API below.
  /// \p PassName is the name of the pass emitting this diagnostic. If
  /// this name matches the regular expression given in -Rpass-analysis=, then
  /// the diagnostic will be emitted. \p Fn is the function where the diagnostic
  /// is being emitted. \p Loc is the location information to use in the
  /// diagnostic. If line table information is available, the diagnostic will
  /// include the source code location. \p Msg is the message to show. The
  /// front-end will append its own message related to options that address
  /// floating-point non-commutativity. Note that this class does not copy this
  /// message, so this reference must be valid for the whole life time of the
  /// diagnostic.</doc>
