<def f='include/llvm-6.0/llvm/IR/GlobalVariable.h' l='104' ll='112' type='bool llvm::GlobalVariable::hasDefinitiveInitializer() const'/>
<doc f='include/llvm-6.0/llvm/IR/GlobalVariable.h' l='88'>/// hasDefinitiveInitializer - Whether the global variable has an initializer,
  /// and any other instances of the global (this can happen due to weak
  /// linkage) are guaranteed to have the same initializer.
  ///
  /// Note that if you want to transform a global, you must use
  /// hasUniqueInitializer() instead, because of the *_odr linkage type.
  ///
  /// Example:
  ///
  /// @a = global SomeType* null - Initializer is both definitive and unique.
  ///
  /// @b = global weak SomeType* null - Initializer is neither definitive nor
  /// unique.
  ///
  /// @c = global weak_odr SomeType* null - Initializer is definitive, but not
  /// unique.</doc>
