<dec f='include/llvm-6.0/llvm/Analysis/TargetTransformInfo.h' l='212' type='int llvm::TargetTransformInfo::getCallCost(llvm::FunctionType * FTy, int NumArgs = -1) const'/>
<doc f='include/llvm-6.0/llvm/Analysis/TargetTransformInfo.h' l='203'>/// \brief Estimate the cost of a function call when lowered.
  ///
  /// The contract for this is the same as \c getOperationCost except that it
  /// supports an interface that provides extra information specific to call
  /// instructions.
  ///
  /// This is the most basic query for estimating call cost: it only knows the
  /// function type and (potentially) the number of arguments at the call site.
  /// The latter is only interesting for varargs function types.</doc>
