<def f='include/llvm-6.0/llvm/ADT/ilist_node.h' l='267' ll='269' type='const ParentTy * llvm::ilist_node_with_parent::getNodeParent() const'/>
<use f='include/llvm-6.0/llvm/ADT/ilist_node.h' l='279' u='c' c='_ZN4llvm22ilist_node_with_parent11getPrevNodeEv'/>
<use f='include/llvm-6.0/llvm/ADT/ilist_node.h' l='293' u='c' c='_ZN4llvm22ilist_node_with_parent11getNextNodeEv'/>
<doc f='include/llvm-6.0/llvm/ADT/ilist_node.h' l='262'>/// Forward to NodeTy::getParent().
  ///
  /// Note: do not use the name &quot;getParent()&quot;.  We want a compile error
  /// (instead of recursion) when the subclass fails to implement \a
  /// getParent().</doc>
