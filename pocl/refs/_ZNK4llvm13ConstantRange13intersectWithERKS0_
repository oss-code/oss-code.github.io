<dec f='include/llvm-6.0/llvm/IR/ConstantRange.h' l='215' type='llvm::ConstantRange llvm::ConstantRange::intersectWith(const llvm::ConstantRange &amp; CR) const'/>
<doc f='include/llvm-6.0/llvm/IR/ConstantRange.h' l='209'>/// Return the range that results from the intersection of
  /// this range with another range.  The resultant range is guaranteed to
  /// include all elements contained in both input ranges, and to have the
  /// smallest possible set size that does so.  Because there may be two
  /// intersections with the same set size, A.intersectWith(B) might not
  /// be equal to B.intersectWith(A).</doc>
