<inh f='include/llvm-6.0/llvm/Pass.h' l='225' c='llvm::ModulePass'/>
<def f='include/llvm-6.0/llvm/Analysis/CallGraph.h' l='324' ll='398'/>
<size>40</size>
<doc f='include/llvm-6.0/llvm/Analysis/CallGraph.h' l='317'>/// \brief The \c ModulePass which wraps up a \c CallGraph and the logic to
/// build it.
///
/// This class exposes both the interface to the call graph container and the
/// module pass which runs over a module of IR and produces the call graph. The
/// call graph interface is entirelly a wrapper around a \c CallGraph object
/// which is stored internally for each module.</doc>
<mbr r='llvm::CallGraphWrapperPass::G' o='256' t='std::unique_ptr&lt;CallGraph&gt;'/>
<smbr r='llvm::CallGraphWrapperPass::ID' t='char'/>
<fun r='_ZN4llvm20CallGraphWrapperPassC1Ev'/>
<fun r='_ZN4llvm20CallGraphWrapperPassD1Ev'/>
<fun r='_ZNK4llvm20CallGraphWrapperPass12getCallGraphEv'/>
<fun r='_ZN4llvm20CallGraphWrapperPass12getCallGraphEv'/>
<fun r='_ZNK4llvm20CallGraphWrapperPass9getModuleEv'/>
<fun r='_ZN4llvm20CallGraphWrapperPass5beginEv'/>
<fun r='_ZN4llvm20CallGraphWrapperPass3endEv'/>
<fun r='_ZNK4llvm20CallGraphWrapperPass5beginEv'/>
<fun r='_ZNK4llvm20CallGraphWrapperPass3endEv'/>
<fun r='_ZNK4llvm20CallGraphWrapperPassixEPKNS_8FunctionE'/>
<fun r='_ZN4llvm20CallGraphWrapperPassixEPKNS_8FunctionE'/>
<fun r='_ZNK4llvm20CallGraphWrapperPass22getExternalCallingNodeEv'/>
<fun r='_ZNK4llvm20CallGraphWrapperPass20getCallsExternalNodeEv'/>
<fun r='_ZN4llvm20CallGraphWrapperPass24removeFunctionFromModuleEPNS_13CallGraphNodeE'/>
<fun r='_ZN4llvm20CallGraphWrapperPass19getOrInsertFunctionEPKNS_8FunctionE'/>
<fun r='_ZNK4llvm20CallGraphWrapperPass16getAnalysisUsageERNS_13AnalysisUsageE'/>
<fun r='_ZN4llvm20CallGraphWrapperPass11runOnModuleERNS_6ModuleE'/>
<fun r='_ZN4llvm20CallGraphWrapperPass13releaseMemoryEv'/>
<fun r='_ZNK4llvm20CallGraphWrapperPass5printERNS_11raw_ostreamEPKNS_6ModuleE'/>
<fun r='_ZNK4llvm20CallGraphWrapperPass4dumpEv'/>
