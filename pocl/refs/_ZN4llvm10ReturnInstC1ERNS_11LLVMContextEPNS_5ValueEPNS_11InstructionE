<dec f='include/llvm-6.0/llvm/IR/Instructions.h' l='2921' type='void llvm::ReturnInst::ReturnInst(llvm::LLVMContext &amp; C, llvm::Value * retVal = nullptr, llvm::Instruction * InsertBefore = nullptr)'/>
<use f='include/llvm-6.0/llvm/IR/Instructions.h' l='2935' u='c' c='_ZN4llvm10ReturnInst6CreateERNS_11LLVMContextEPNS_5ValueEPNS_11InstructionE'/>
<doc f='include/llvm-6.0/llvm/IR/Instructions.h' l='2910'>// ReturnInst constructors:
  // ReturnInst()                  - &apos;ret void&apos; instruction
  // ReturnInst(    null)          - &apos;ret void&apos; instruction
  // ReturnInst(Value* X)          - &apos;ret X&apos;    instruction
  // ReturnInst(    null, Inst *I) - &apos;ret void&apos; instruction, insert before I
  // ReturnInst(Value* X, Inst *I) - &apos;ret X&apos;    instruction, insert before I
  // ReturnInst(    null, BB *B)   - &apos;ret void&apos; instruction, insert @ end of B
  // ReturnInst(Value* X, BB *B)   - &apos;ret X&apos;    instruction, insert @ end of B
  //
  // NOTE: If the Value* passed is of type void then the constructor behaves as
  // if it was passed NULL.</doc>
