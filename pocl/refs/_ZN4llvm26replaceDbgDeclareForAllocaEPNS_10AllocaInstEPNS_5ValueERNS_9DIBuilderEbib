<dec f='include/llvm-6.0/llvm/Transforms/Utils/Local.h' l='361' type='bool llvm::replaceDbgDeclareForAlloca(llvm::AllocaInst * AI, llvm::Value * NewAllocaAddress, llvm::DIBuilder &amp; Builder, bool DerefBefore, int Offset, bool DerefAfter)'/>
<doc f='include/llvm-6.0/llvm/Transforms/Utils/Local.h' l='355'>/// Replaces llvm.dbg.declare instruction when the alloca it describes
/// is replaced with a new value. If Deref is true, an additional
/// DW_OP_deref is prepended to the expression. If Offset is non-zero,
/// a constant displacement is added to the expression (between the
/// optional Deref operations). Offset can be negative. The new
/// llvm.dbg.declare is inserted immediately before AI.</doc>
