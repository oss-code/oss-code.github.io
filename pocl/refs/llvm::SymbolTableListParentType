<def f='include/llvm-6.0/llvm/IR/SymbolTableListTraits.h' l='48'/>
<def f='include/llvm-6.0/llvm/IR/SymbolTableListTraits.h' l='52' macro='1'/>
<def f='include/llvm-6.0/llvm/IR/SymbolTableListTraits.h' l='53' macro='1'/>
<def f='include/llvm-6.0/llvm/IR/SymbolTableListTraits.h' l='54' macro='1'/>
<def f='include/llvm-6.0/llvm/IR/SymbolTableListTraits.h' l='55' macro='1'/>
<def f='include/llvm-6.0/llvm/IR/SymbolTableListTraits.h' l='56' macro='1'/>
<def f='include/llvm-6.0/llvm/IR/SymbolTableListTraits.h' l='57' macro='1'/>
<def f='include/llvm-6.0/llvm/IR/SymbolTableListTraits.h' l='58' macro='1'/>
<size>1</size>
<doc f='include/llvm-6.0/llvm/IR/SymbolTableListTraits.h' l='44'>/// Template metafunction to get the parent type for a symbol table list.
///
/// Implementations create a typedef called \c type so that we only need a
/// single template parameter for the list and traits.</doc>
