<dec f='include/llvm-6.0/llvm/IR/BasicBlock.h' l='223' type='const llvm::BasicBlock * llvm::BasicBlock::getUniquePredecessor() const'/>
<use f='include/llvm-6.0/llvm/IR/BasicBlock.h' l='226' u='c' c='_ZN4llvm10BasicBlock20getUniquePredecessorEv'/>
<doc f='include/llvm-6.0/llvm/IR/BasicBlock.h' l='217'>/// \brief Return the predecessor of this block if it has a unique predecessor
  /// block. Otherwise return a null pointer.
  ///
  /// Note that unique predecessor doesn&apos;t mean single edge, there can be
  /// multiple edges from the unique predecessor to this block (for example a
  /// switch statement with multiple cases having the same destination).</doc>
