<dec f='include/llvm-6.0/llvm/Analysis/LazyCallGraph.h' l='875' type='void llvm::LazyCallGraph::RefSCC::replaceNodeFunction(llvm::LazyCallGraph::Node &amp; N, llvm::Function &amp; NewF)'/>
<doc f='include/llvm-6.0/llvm/Analysis/LazyCallGraph.h' l='866'>/// Directly replace a node&apos;s function with a new function.
    ///
    /// This should be used when moving the body and users of a function to
    /// a new formal function object but not otherwise changing the call graph
    /// structure in any way.
    ///
    /// It requires that the old function in the provided node have zero uses
    /// and the new function must have calls and references to it establishing
    /// an equivalent graph.</doc>
