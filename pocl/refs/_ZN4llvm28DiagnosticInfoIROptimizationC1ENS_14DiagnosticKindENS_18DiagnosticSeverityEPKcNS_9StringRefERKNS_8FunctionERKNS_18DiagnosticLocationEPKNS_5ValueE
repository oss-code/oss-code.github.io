<def f='include/llvm-6.0/llvm/IR/DiagnosticInfo.h' l='601' ll='609' type='void llvm::DiagnosticInfoIROptimization::DiagnosticInfoIROptimization(enum DiagnosticKind Kind, enum DiagnosticSeverity Severity, const char * PassName, llvm::StringRef RemarkName, const llvm::Function &amp; Fn, const llvm::DiagnosticLocation &amp; Loc, const llvm::Value * CodeRegion = nullptr)'/>
<doc f='include/llvm-6.0/llvm/IR/DiagnosticInfo.h' l='593'>/// \p PassName is the name of the pass emitting this diagnostic. \p
  /// RemarkName is a textual identifier for the remark (single-word,
  /// camel-case). \p Fn is the function where the diagnostic is being emitted.
  /// \p Loc is the location information to use in the diagnostic. If line table
  /// information is available, the diagnostic will include the source code
  /// location. \p CodeRegion is IR value (currently basic block) that the
  /// optimization operates on. This is currently used to provide run-time
  /// hotness information with PGO.</doc>
