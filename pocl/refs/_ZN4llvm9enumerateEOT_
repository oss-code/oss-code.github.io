<def f='include/llvm-6.0/llvm/ADT/STLExtras.h' l='1112' ll='1114' type='detail::enumerator&lt;R&gt; llvm::enumerate(R &amp;&amp; TheRange)'/>
<doc f='include/llvm-6.0/llvm/ADT/STLExtras.h' l='1097'>/// Given an input range, returns a new range whose values are are pair (A,B)
/// such that A is the 0-based index of the item in the sequence, and B is
/// the value from the original sequence.  Example:
///
/// std::vector&lt;char&gt; Items = {&apos;A&apos;, &apos;B&apos;, &apos;C&apos;, &apos;D&apos;};
/// for (auto X : enumerate(Items)) {
///   printf(&quot;Item %d - %c\n&quot;, X.index(), X.value());
/// }
///
/// Output:
///   Item 0 - A
///   Item 1 - B
///   Item 2 - C
///   Item 3 - D
///</doc>
