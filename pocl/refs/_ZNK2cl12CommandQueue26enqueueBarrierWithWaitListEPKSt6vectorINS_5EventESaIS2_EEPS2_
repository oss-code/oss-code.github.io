<def f='pocl/include/CL/cl2.hpp' l='8171' ll='8188' type='cl_int cl::CommandQueue::enqueueBarrierWithWaitList(const vector&lt;cl::Event&gt; * events = 0, cl::Event * event = 0) const'/>
<doc f='pocl/include/CL/cl2.hpp' l='8160'>/**
     * A synchronization point that enqueues a barrier operation.
     *
     * Enqueues a barrier command which waits for either a list of events to complete,
     * or if the list is empty it waits for all commands previously enqueued in command_queue
     * to complete before it completes. This command blocks command execution, that is, any
     * following commands enqueued after it do not execute until it completes. This command
     * returns an event which can be waited on, i.e. this event can be waited on to insure that
     * all events either in the event_wait_list or all previously enqueued commands, queued
     * before this command to command_queue, have completed.
     */</doc>
