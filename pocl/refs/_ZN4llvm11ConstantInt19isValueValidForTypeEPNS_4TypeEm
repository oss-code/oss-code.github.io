<dec f='include/llvm-6.0/llvm/IR/Constants.h' l='185' type='static bool llvm::ConstantInt::isValueValidForType(llvm::Type * Ty, uint64_t V)'/>
<doc f='include/llvm-6.0/llvm/IR/Constants.h' l='176'>/// This static method returns true if the type Ty is big enough to
  /// represent the value V. This can be used to avoid having the get method
  /// assert when V is larger than Ty can represent. Note that there are two
  /// versions of this method, one for unsigned and one for signed integers.
  /// Although ConstantInt canonicalizes everything to an unsigned integer,
  /// the signed version avoids callers having to convert a signed quantity
  /// to the appropriate unsigned type before calling the method.
  /// @returns true if V is a valid value for type Ty
  /// @brief Determine if the value is in range for the given type.</doc>
