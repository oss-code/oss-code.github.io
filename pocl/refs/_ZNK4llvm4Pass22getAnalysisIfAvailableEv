<dec f='include/llvm-6.0/llvm/Pass.h' l='195' type='AnalysisType * llvm::Pass::getAnalysisIfAvailable() const'/>
<def f='include/llvm-6.0/llvm/PassAnalysisSupport.h' l='202' ll='215' type='AnalysisType * llvm::Pass::getAnalysisIfAvailable() const'/>
<doc f='include/llvm-6.0/llvm/Pass.h' l='187'>/// getAnalysisIfAvailable&lt;AnalysisType&gt;() - Subclasses use this function to
  /// get analysis information that might be around, for example to update it.
  /// This is different than getAnalysis in that it can fail (if the analysis
  /// results haven&apos;t been computed), so should only be used if you can handle
  /// the case when the analysis is not available.  This method is often used by
  /// transformation APIs to update analysis results for a pass automatically as
  /// the transform is performed.</doc>
