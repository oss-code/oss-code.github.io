<dec f='pocl/include/pocl_cache.h' l='46' type='int pocl_cache_create_program_cachedir(cl_program program, unsigned int device_i, const char * preprocessed_source, size_t source_len, char * program_bc_path)'/>
<use f='pocl/lib/CL/clCreateProgramWithBinary.c' l='157' u='c' c='create_program_skeleton'/>
<def f='pocl/lib/CL/pocl_cache.c' l='561' ll='609' type='int pocl_cache_create_program_cachedir(cl_program program, unsigned int device_i, const char * preprocessed_source, size_t source_len, char * program_bc_path)'/>
<doc f='pocl/lib/CL/pocl_cache.c' l='553'>/* Create the new program cachedir, invalidating the old program
 * binaries and IRs if the new computed hash is different from the old
 * one. The source hash is computed from the preprocessed source
 * if present, from the original source otherwise: this is to ensure
 * that cache-related functions (which include log retrieval) still
 * work correctly even if preprocessing fails
 */</doc>
<use f='pocl/lib/CL/pocl_llvm_build.cc' l='388' u='c' c='pocl_llvm_build_program'/>
<use f='pocl/lib/CL/pocl_llvm_build.cc' l='514' u='c' c='pocl_llvm_build_program'/>
<use f='pocl/lib/CL/pocl_llvm_build.cc' l='521' u='c' c='pocl_llvm_build_program'/>
<use f='pocl/lib/CL/pocl_llvm_build.cc' l='714' u='c' c='pocl_llvm_link_program'/>
