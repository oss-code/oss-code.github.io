<def f='include/llvm-6.0/llvm/Support/TrailingObjects.h' l='166' ll='179' type='static const NextTy * llvm::trailing_objects_internal::TrailingObjectsImpl&lt;Align, type-parameter-0-1, type-parameter-0-2, type-parameter-0-3, type-parameter-0-4, type-parameter-0-5...&gt;::getTrailingObjectsImpl(const BaseTy * Obj, TrailingObjectsBase::OverloadToken&lt;NextTy&gt; )'/>
<doc f='include/llvm-6.0/llvm/Support/TrailingObjects.h' l='157'>// These two functions are helper functions for
  // TrailingObjects::getTrailingObjects. They recurse to the left --
  // the result for each type in the list of trailing types depends on
  // the result of calling the function on the type to the
  // left. However, the function for the type to the left is
  // implemented by a *subclass* of this class, so we invoke it via
  // the TopTrailingObj, which is, via the
  // curiously-recurring-template-pattern, the most-derived type in
  // this recursion, and thus, contains all the overloads.</doc>
