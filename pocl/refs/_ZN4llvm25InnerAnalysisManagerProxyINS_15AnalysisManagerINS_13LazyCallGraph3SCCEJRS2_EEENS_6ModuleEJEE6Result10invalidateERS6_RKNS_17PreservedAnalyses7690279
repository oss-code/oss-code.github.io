<dec f='include/llvm-6.0/llvm/Analysis/CGSCCPassManager.h' l='191' type='bool llvm::InnerAnalysisManagerProxy&lt;llvm::AnalysisManager&lt;LazyCallGraph::SCC, llvm::LazyCallGraph &amp;&gt;, llvm::Module&gt;::Result::invalidate(llvm::Module &amp; M, const llvm::PreservedAnalyses &amp; PA, ModuleAnalysisManager::Invalidator &amp; Inv)'/>
<doc f='include/llvm-6.0/llvm/Analysis/CGSCCPassManager.h' l='181'>/// \brief Handler for invalidation of the Module.
  ///
  /// If the proxy analysis itself is preserved, then we assume that the set of
  /// SCCs in the Module hasn&apos;t changed. Thus any pointers to SCCs in the
  /// CGSCCAnalysisManager are still valid, and we don&apos;t need to call \c clear
  /// on the CGSCCAnalysisManager.
  ///
  /// Regardless of whether this analysis is marked as preserved, all of the
  /// analyses in the \c CGSCCAnalysisManager are potentially invalidated based
  /// on the set of preserved analyses.</doc>
