<dec f='include/llvm-6.0/llvm/IR/ConstantRange.h' l='70' type='static llvm::ConstantRange llvm::ConstantRange::makeAllowedICmpRegion(CmpInst::Predicate Pred, const llvm::ConstantRange &amp; Other)'/>
<doc f='include/llvm-6.0/llvm/IR/ConstantRange.h' l='62'>/// Produce the smallest range such that all values that may satisfy the given
  /// predicate with any value contained within Other is contained in the
  /// returned range.  Formally, this returns a superset of
  /// &apos;union over all y in Other . { x : icmp op x y is true }&apos;.  If the exact
  /// answer is not representable as a ConstantRange, the return value will be a
  /// proper superset of the above.
  ///
  /// Example: Pred = ult and Other = i8 [2, 5) returns Result = [0, 4)</doc>
