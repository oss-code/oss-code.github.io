<dec f='include/llvm-6.0/llvm/IR/Type.h' l='124' type='void llvm::Type::print(llvm::raw_ostream &amp; O, bool IsForDebug = false, bool NoDetails = false) const'/>
<use f='include/llvm-6.0/llvm/IR/Type.h' l='442' u='c' c='_ZN4llvmlsERNS_11raw_ostreamERKNS_4TypeE'/>
<doc f='include/llvm-6.0/llvm/IR/Type.h' l='118'>/// Print the current type.
  /// Omit the type details if \p NoDetails == true.
  /// E.g., let %st = type { i32, i16 }
  /// When \p NoDetails is true, we only print %st.
  /// Put differently, \p NoDetails prints the type as if
  /// inlined with the operands when printing an instruction.</doc>
