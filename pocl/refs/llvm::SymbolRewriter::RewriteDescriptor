<def f='include/llvm-6.0/llvm/Transforms/Utils/SymbolRewriter.h' l='69' ll='91'/>
<size>16</size>
<doc f='include/llvm-6.0/llvm/Transforms/Utils/SymbolRewriter.h' l='58'>/// The basic entity representing a rewrite operation.  It serves as the base
/// class for any rewrite descriptor.  It has a certain set of specializations
/// which describe a particular rewrite.
///
/// The RewriteMapParser can be used to parse a mapping file that provides the
/// mapping for rewriting the symbols.  The descriptors individually describe
/// whether to rewrite a function, global variable, or global alias.  Each of
/// these can be selected either by explicitly providing a name for the ones to
/// be rewritten or providing a (posix compatible) regular expression that will
/// select the symbols to rewrite.  This descriptor list is passed to the
/// SymbolRewriter pass.</doc>
<fun r='_ZN4llvm14SymbolRewriter17RewriteDescriptorC1ERKS1_'/>
<fun r='_ZN4llvm14SymbolRewriter17RewriteDescriptoraSERKS1_'/>
<fun r='_ZN4llvm14SymbolRewriter17RewriteDescriptorD1Ev'/>
<fun r='_ZNK4llvm14SymbolRewriter17RewriteDescriptor7getTypeEv'/>
<fun r='_ZN4llvm14SymbolRewriter17RewriteDescriptor15performOnModuleERNS_6ModuleE'/>
<fun r='_ZN4llvm14SymbolRewriter17RewriteDescriptorC1ENS1_4TypeE'/>
<mbr r='llvm::SymbolRewriter::RewriteDescriptor::Kind' o='64' t='const llvm::SymbolRewriter::RewriteDescriptor::Type'/>
