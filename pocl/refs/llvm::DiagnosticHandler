<def f='include/llvm-6.0/llvm/IR/DiagnosticHandler.h' l='25' ll='72'/>
<size>24</size>
<doc f='include/llvm-6.0/llvm/IR/DiagnosticHandler.h' l='21'>/// \brief This is the base class for diagnostic handling in LLVM.
/// The handleDiagnostics method must be overriden by the subclasses to handle
/// diagnostic. The *RemarkEnabled methods can be overriden to control
/// which remarks are enabled.</doc>
<mbr r='llvm::DiagnosticHandler::DiagnosticContext' o='64' t='void *'/>
<fun r='_ZN4llvm17DiagnosticHandlerC1EPv'/>
<fun r='_ZN4llvm17DiagnosticHandlerD1Ev'/>
<mbr r='llvm::DiagnosticHandler::DiagHandlerCallback' o='128' t='DiagnosticHandlerTy'/>
<fun r='_ZN4llvm17DiagnosticHandler17handleDiagnosticsERKNS_14DiagnosticInfoE'/>
<fun r='_ZNK4llvm17DiagnosticHandler23isAnalysisRemarkEnabledENS_9StringRefE'/>
<fun r='_ZNK4llvm17DiagnosticHandler24isMissedOptRemarkEnabledENS_9StringRefE'/>
<fun r='_ZNK4llvm17DiagnosticHandler24isPassedOptRemarkEnabledENS_9StringRefE'/>
<fun r='_ZNK4llvm17DiagnosticHandler18isAnyRemarkEnabledENS_9StringRefE'/>
<fun r='_ZNK4llvm17DiagnosticHandler18isAnyRemarkEnabledEv'/>
