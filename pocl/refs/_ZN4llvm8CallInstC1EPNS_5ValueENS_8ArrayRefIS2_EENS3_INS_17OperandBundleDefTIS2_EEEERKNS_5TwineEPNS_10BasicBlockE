<dec f='include/llvm-6.0/llvm/IR/Instructions.h' l='1383' type='void llvm::CallInst::CallInst(llvm::Value * Func, ArrayRef&lt;llvm::Value *&gt; Args, ArrayRef&lt;OperandBundleDef&gt; Bundles, const llvm::Twine &amp; NameStr, llvm::BasicBlock * InsertAtEnd)'/>
<use f='include/llvm-6.0/llvm/IR/Instructions.h' l='1455' u='c' c='_ZN4llvm8CallInst6CreateEPNS_5ValueENS_8ArrayRefIS2_EENS3_INS_17OperandBundleDefTIS2_EEEERKNS_5TwineEPNS_10BasicBlockE'/>
<use f='include/llvm-6.0/llvm/IR/Instructions.h' l='1461' u='c' c='_ZN4llvm8CallInst6CreateEPNS_5ValueENS_8ArrayRefIS2_EERKNS_5TwineEPNS_10BasicBlockE'/>
<def f='include/llvm-6.0/llvm/IR/Instructions.h' l='1935' ll='1945' type='void llvm::CallInst::CallInst(llvm::Value * Func, ArrayRef&lt;llvm::Value *&gt; Args, ArrayRef&lt;OperandBundleDef&gt; Bundles, const llvm::Twine &amp; NameStr, llvm::BasicBlock * InsertAtEnd)'/>
<doc f='include/llvm-6.0/llvm/IR/Instructions.h' l='1381'>/// Construct a CallInst given a range of arguments.
  /// Construct a CallInst from a range of arguments</doc>
