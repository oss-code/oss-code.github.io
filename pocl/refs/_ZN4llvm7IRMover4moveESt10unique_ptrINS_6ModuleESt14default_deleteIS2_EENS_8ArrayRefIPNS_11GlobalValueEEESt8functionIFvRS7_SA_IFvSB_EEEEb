<dec f='include/llvm-6.0/llvm/Linker/IRMover.h' l='76' type='llvm::Error llvm::IRMover::move(std::unique_ptr&lt;Module&gt; Src, ArrayRef&lt;llvm::GlobalValue *&gt; ValuesToLink, std::function&lt;void (GlobalValue &amp;, ValueAdder)&gt; AddLazyFor, bool IsPerformingImport)'/>
<doc f='include/llvm-6.0/llvm/Linker/IRMover.h' l='67'>/// Move in the provide values in \p ValuesToLink from \p Src.
  ///
  /// - \p AddLazyFor is a call back that the IRMover will call when a global
  ///   value is referenced by one of the ValuesToLink (transitively) but was
  ///   not present in ValuesToLink. The GlobalValue and a ValueAdder callback
  ///   are passed as an argument, and the callback is expected to be called
  ///   if the GlobalValue needs to be added to the \p ValuesToLink and linked.
  /// - \p IsPerformingImport is true when this IR link is to perform ThinLTO
  ///   function importing from Src.</doc>
