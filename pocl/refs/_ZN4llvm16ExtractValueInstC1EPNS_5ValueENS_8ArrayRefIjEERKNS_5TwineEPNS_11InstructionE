<dec f='include/llvm-6.0/llvm/IR/Instructions.h' l='2335' type='void llvm::ExtractValueInst::ExtractValueInst(llvm::Value * Agg, ArrayRef&lt;unsigned int&gt; Idxs, const llvm::Twine &amp; NameStr, llvm::Instruction * InsertBefore)'/>
<use f='include/llvm-6.0/llvm/IR/Instructions.h' l='2357' u='c' c='_ZN4llvm16ExtractValueInst6CreateEPNS_5ValueENS_8ArrayRefIjEERKNS_5TwineEPNS_11InstructionE'/>
<def f='include/llvm-6.0/llvm/IR/Instructions.h' l='2412' ll='2419' type='void llvm::ExtractValueInst::ExtractValueInst(llvm::Value * Agg, ArrayRef&lt;unsigned int&gt; Idxs, const llvm::Twine &amp; NameStr, llvm::Instruction * InsertBefore)'/>
<doc f='include/llvm-6.0/llvm/IR/Instructions.h' l='2331'>/// Constructors - Create a extractvalue instruction with a base aggregate
  /// value and a list of indices.  The first ctor can optionally insert before
  /// an existing instruction, the second appends the new instruction to the
  /// specified BasicBlock.</doc>
