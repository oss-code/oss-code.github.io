<def f='include/llvm-6.0/llvm/Support/TrailingObjects.h' l='283' ll='287' type='static size_t llvm::TrailingObjects::callNumTrailingObjects(const BaseTy * Obj, TrailingObjectsBase::OverloadToken&lt;BaseTy&gt; )'/>
<doc f='include/llvm-6.0/llvm/Support/TrailingObjects.h' l='276'>// callNumTrailingObjects simply calls numTrailingObjects on the
  // provided Obj -- except when the type being queried is BaseTy
  // itself. There is always only one of the base object, so that case
  // is handled here. (An additional benefit of indirecting through
  // this function is that consumers only say &quot;friend
  // TrailingObjects&quot;, and thus, only this class itself can call the
  // numTrailingObjects function.)</doc>
