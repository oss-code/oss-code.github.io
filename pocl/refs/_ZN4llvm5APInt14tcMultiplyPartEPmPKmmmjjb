<dec f='include/llvm-6.0/llvm/ADT/APInt.h' l='1867' type='static int llvm::APInt::tcMultiplyPart(WordType * dst, const WordType * src, WordType multiplier, WordType carry, unsigned int srcParts, unsigned int dstParts, bool add)'/>
<doc f='include/llvm-6.0/llvm/ADT/APInt.h' l='1857'>/// DST += SRC * MULTIPLIER + PART   if add is true
  /// DST  = SRC * MULTIPLIER + PART   if add is false
  ///
  /// Requires 0 &lt;= DSTPARTS &lt;= SRCPARTS + 1.  If DST overlaps SRC they must
  /// start at the same point, i.e. DST == SRC.
  ///
  /// If DSTPARTS == SRC_PARTS + 1 no overflow occurs and zero is returned.
  /// Otherwise DST is filled with the least significant DSTPARTS parts of the
  /// result, and if all of the omitted higher parts were zero return zero,
  /// otherwise overflow occurred and return one.</doc>
