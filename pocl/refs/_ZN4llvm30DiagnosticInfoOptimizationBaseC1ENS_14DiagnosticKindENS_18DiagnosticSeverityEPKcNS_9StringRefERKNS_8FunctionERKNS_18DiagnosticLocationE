<def f='include/llvm-6.0/llvm/IR/DiagnosticInfo.h' l='433' ll='439' type='void llvm::DiagnosticInfoOptimizationBase::DiagnosticInfoOptimizationBase(enum DiagnosticKind Kind, enum DiagnosticSeverity Severity, const char * PassName, llvm::StringRef RemarkName, const llvm::Function &amp; Fn, const llvm::DiagnosticLocation &amp; Loc)'/>
<use f='include/llvm-6.0/llvm/IR/DiagnosticInfo.h' l='607' u='c' c='_ZN4llvm28DiagnosticInfoIROptimizationC1ENS_14DiagnosticKindENS_18DiagnosticSeverityEPKcNS_9StringRefERKNS_8FunctionERKNS_18DiagnosticLocationEPKNS_5ValueE'/>
<use f='include/llvm-6.0/llvm/IR/DiagnosticInfo.h' l='620' u='c' c='_ZN4llvm28DiagnosticInfoIROptimizationC1EPKcNS_9StringRefERKS0_'/>
<use f='include/llvm-6.0/llvm/IR/DiagnosticInfo.h' l='640' u='c' c='_ZN4llvm28DiagnosticInfoIROptimizationC1ENS_14DiagnosticKindENS_18DiagnosticSeverityEPKcRKNS_8FunctionERKNS_18DiagnosticLocationERKNS_5TwineE'/>
<doc f='include/llvm-6.0/llvm/IR/DiagnosticInfo.h' l='427'>/// \p PassName is the name of the pass emitting this diagnostic. \p
  /// RemarkName is a textual identifier for the remark (single-word,
  /// camel-case). \p Fn is the function where the diagnostic is being emitted.
  /// \p Loc is the location information to use in the diagnostic. If line table
  /// information is available, the diagnostic will include the source code
  /// location.</doc>
