<dec f='include/hwloc.h' l='307' type='int hwloc_compare_types(hwloc_obj_type_t type1, hwloc_obj_type_t type2)'/>
<use f='include/hwloc/inlines.h' l='38' u='c' c='hwloc_get_type_or_below_depth'/>
<use f='include/hwloc/inlines.h' l='55' u='c' c='hwloc_get_type_or_above_depth'/>
<doc f='include/hwloc.h' l='290'>/** \brief Compare the depth of two object types
 *
 * Types shouldn&apos;t be compared as they are, since newer ones may be added in
 * the future.  This function returns less than, equal to, or greater than zero
 * respectively if \p type1 objects usually include \p type2 objects, are the
 * same as \p type2 objects, or are included in \p type2 objects. If the types
 * can not be compared (because neither is usually contained in the other),
 * ::HWLOC_TYPE_UNORDERED is returned.  Object types containing CPUs can always
 * be compared (usually, a system contains machines which contain nodes which
 * contain packages which contain caches, which contain cores, which contain
 * processors).
 *
 * \note ::HWLOC_OBJ_PU will always be the deepest.
 * \note This does not mean that the actual topology will respect that order:
 * e.g. as of today cores may also contain caches, and packages may also contain
 * nodes. This is thus just to be seen as a fallback comparison method.
 */</doc>
